import{_ as e,c as t,o,a as r}from"./app.aedd70e1.js";const _='{"title":"Introduction","description":"","frontmatter":{},"headers":[{"level":2,"title":"Why should you use Pinia?","slug":"why-should-you-use-pinia"}],"relativePath":"introduction.md","lastUpdated":1633204571858}',a={},n=r('<h1 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-hidden="true">#</a></h1><p>Pinia is a state management tool, an alternative of <a href="https://next.vuex.vuejs.org/" target="_blank" rel="noopener noreferrer">Vuex</a>. It is a store library that works well with both <a href="https://vuejs.org/" target="_blank" rel="noopener noreferrer">Vue 2</a> and the Composition API of <a href="https://v3.vuejs.org/" target="_blank" rel="noopener noreferrer">Vue 3</a>. There might be some differences for installation and SSR, feel free to check the <a href="https://pinia.esm.dev/ssr/" target="_blank" rel="noopener noreferrer">official documentation</a> for more!</p><h2 id="why-should-you-use-pinia" tabindex="-1">Why should you use Pinia? <a class="header-anchor" href="#why-should-you-use-pinia" aria-hidden="true">#</a></h2><p>Pinia allows you to define multiple stores that can be shared across components or pages. Using Pinia, you only need to have <code>state</code>, <code>getters</code>, and <code>actions</code>.</p><p>Pinia also comes with proper <a href="https://www.typescriptlang.org/" target="_blank" rel="noopener noreferrer">TypeScript</a> support or <strong>autocompletion</strong> for JS users.</p><p>Last but not least, it also has <strong>Hot module replacement</strong>. You can modify your stores without reloading your page, this improves the development experience.</p>',6),s=[n];function i(d,h,l,p,c,u){return o(),t("div",null,s)}var g=e(a,[["render",i]]);export{_ as __pageData,g as default};
